From a940e70e25ffb9b6a433d29bba640ea1abfa043e Mon Sep 17 00:00:00 2001
From: Marius Gripsgard <marius@ubports.com>
Date: Sat, 21 Mar 2020 02:29:03 +0100
Subject: [PATCH 1/8] Replace own lights plugin with hfd leds

---
 debian/control                                |   4 +-
 debian/lomiri-private.install                 |   1 -
 plugins/CMakeLists.txt                        |   1 -
 plugins/Lights/CMakeLists.txt                 |  19 --
 plugins/Lights/Lights.cpp                     | 166 ------------------
 plugins/Lights/Lights.h                       |  75 --------
 plugins/Lights/android-hardware.h             |  19 --
 plugins/Lights/plugin.cpp                     |  35 ----
 plugins/Lights/plugin.h                       |  34 ----
 plugins/Lights/qmldir                         |   3 -
 qml/Panel/Indicators/IndicatorsLight.qml      |  16 +-
 tests/mocks/CMakeLists.txt                    |   2 +-
 tests/mocks/Hfd/CMakeLists.txt                |   8 +
 .../mocks/{Lights/Lights.cpp => Hfd/Leds.cpp} |  24 +--
 tests/mocks/{Lights/Lights.h => Hfd/Leds.h}   |  11 +-
 tests/mocks/{Lights => Hfd}/plugin.cpp        |  10 +-
 tests/mocks/{Lights => Hfd}/plugin.h          |   5 +-
 tests/mocks/Hfd/qmldir                        |   3 +
 tests/mocks/Lights/CMakeLists.txt             |   8 -
 tests/mocks/Lights/qmldir                     |   3 -
 .../Panel/Indicators/tst_IndicatorsLight.qml  |  50 +++---
 21 files changed, 68 insertions(+), 429 deletions(-)
 delete mode 100644 plugins/Lights/CMakeLists.txt
 delete mode 100644 plugins/Lights/Lights.cpp
 delete mode 100644 plugins/Lights/Lights.h
 delete mode 100644 plugins/Lights/android-hardware.h
 delete mode 100644 plugins/Lights/plugin.cpp
 delete mode 100644 plugins/Lights/plugin.h
 delete mode 100644 plugins/Lights/qmldir
 create mode 100644 tests/mocks/Hfd/CMakeLists.txt
 rename tests/mocks/{Lights/Lights.cpp => Hfd/Leds.cpp} (76%)
 rename tests/mocks/{Lights/Lights.h => Hfd/Leds.h} (91%)
 rename tests/mocks/{Lights => Hfd}/plugin.cpp (76%)
 rename tests/mocks/{Lights => Hfd}/plugin.h (93%)
 create mode 100644 tests/mocks/Hfd/qmldir
 delete mode 100644 tests/mocks/Lights/CMakeLists.txt
 delete mode 100644 tests/mocks/Lights/qmldir

diff --git a/debian/control b/debian/control
index 22b05d85f..9c3f64e0d 100644
--- a/debian/control
+++ b/debian/control
@@ -3,7 +3,6 @@ Section: x11
 Priority: optional
 Maintainer: Lomiri Developers <lomiri-devel-discuss@lists.lomiri.com>
 Build-Depends:
- android-headers,
  cmake,
  cmake-extras,
  dbus-test-runner,
@@ -25,7 +24,6 @@ Build-Depends:
  libglib2.0-dev,
  libgnome-desktop-3-dev,
  libgsettings-qt-dev,
- libhardware-dev,
  liblightdm-qt5-3-dev,
  liblomiri-connectivity-qt1-dev,
  libpam0g-dev,
@@ -126,6 +124,7 @@ Depends:
  libglib2.0-bin,
  qmenumodel-qml (>= 0.2.11),
  qml-module-biometryd,
+ qml-module-hfd,
  qml-module-lomiri-components,
  qml-module-lomiri-layouts,
  qml-module-lomiri-settings-menus,
@@ -241,7 +240,6 @@ Pre-Depends:
 Depends:
  accountsservice-ubuntu-schemas (>= 0.0.7),
  lomiri-schemas,
- libhardware2,
  qml-module-gsettings1.0,
  qml-module-qtmultimedia,
  lomiri-schemas,
diff --git a/debian/lomiri-private.install b/debian/lomiri-private.install
index d15434bc7..3a2f30a58 100644
--- a/debian/lomiri-private.install
+++ b/debian/lomiri-private.install
@@ -4,7 +4,6 @@ usr/lib/*/lomiri/qml/Cursor
 usr/lib/*/lomiri/qml/GlobalShortcut
 usr/lib/*/lomiri/qml/Greeter
 usr/lib/*/lomiri/qml/LightDM
-usr/lib/*/lomiri/qml/Lights
 usr/lib/*/lomiri/qml/Powerd
 usr/lib/*/lomiri/qml/ScreenshotDirectory
 usr/lib/*/lomiri/qml/SessionBroadcast
diff --git a/plugins/CMakeLists.txt b/plugins/CMakeLists.txt
index 4d53e21bd..3c2978c04 100644
--- a/plugins/CMakeLists.txt
+++ b/plugins/CMakeLists.txt
@@ -16,7 +16,6 @@ add_subdirectory(Cursor)
 add_subdirectory(GlobalShortcut)
 add_subdirectory(Greeter)
 add_subdirectory(LightDM)
-add_subdirectory(Lights)
 add_subdirectory(Powerd)
 add_subdirectory(ScreenshotDirectory)
 add_subdirectory(SessionBroadcast)
diff --git a/plugins/Lights/CMakeLists.txt b/plugins/Lights/CMakeLists.txt
deleted file mode 100644
index b8a6dd5d7..000000000
--- a/plugins/Lights/CMakeLists.txt
+++ /dev/null
@@ -1,19 +0,0 @@
-pkg_check_modules(ANDROID_HEADERS REQUIRED android-headers)
-pkg_check_modules(ANDROID_HARDWARE REQUIRED libhardware)
-
-include_directories(
-    SYSTEM
-    ${ANDROID_HEADERS_INCLUDE_DIRS}
-)
-
-add_library(Lights-qml MODULE
-    plugin.cpp
-    Lights.cpp
-    )
-
-target_link_libraries(Lights-qml
-    Qt5::Qml Qt5::Gui
-    ${ANDROID_HARDWARE_LIBRARIES}
-    )
-
-add_lomiri_plugin(Lights 0.1 Lights TARGETS Lights-qml)
diff --git a/plugins/Lights/Lights.cpp b/plugins/Lights/Lights.cpp
deleted file mode 100644
index 761d8e376..000000000
--- a/plugins/Lights/Lights.cpp
+++ /dev/null
@@ -1,166 +0,0 @@
-/*
- * Copyright (C) 2014 Canonical, Ltd.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; version 3.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- *
- * Author: Renato Araujo Oliveira Filho <renato.filho@canonical.com>
- */
-
-#include "Lights.h"
-#include <QtCore/QDebug>
-
-extern "C" {
-#include "android-hardware.h"
-#include <string.h>
-}
-
-Lights::Lights(QObject* parent)
-  : QObject(parent),
-    m_lightDevice(0),
-    m_color("blue"),
-    m_state(Lights::Off),
-    m_onMs(1000),
-    m_offMs(3000)
-{
-}
-
-Lights::~Lights()
-{
-    if (m_lightDevice) {
-        hw_device_t* device = (hw_device_t*) m_lightDevice;
-        device->close(device);
-    }
-}
-
-void Lights::setState(Lights::State newState)
-{
-    if (!init()) {
-        qWarning() << "No lights device";
-        return;
-    }
-
-    if (m_state != newState) {
-        if (newState == Lights::On) {
-            turnOn();
-        } else {
-            turnOff();
-        }
-
-        m_state = newState;
-        Q_EMIT stateChanged(m_state);
-    }
-}
-
-Lights::State Lights::state() const
-{
-    return m_state;
-}
-
-void Lights::setColor(const QColor &color)
-{
-    if (m_color != color) {
-        m_color = color;
-        Q_EMIT colorChanged(m_color);
-        // FIXME: update the color if the light is already on
-    }
-}
-
-QColor Lights::color() const
-{
-    return m_color;
-}
-
-int Lights::onMillisec() const
-{
-    return m_onMs;
-}
-
-void Lights::setOnMillisec(int onMs)
-{
-    if (m_onMs != onMs) {
-        m_onMs = onMs;
-        Q_EMIT onMillisecChanged(m_onMs);
-        // FIXME: update the property if the light is already on
-    }
-}
-
-int Lights::offMillisec() const
-{
-    return m_offMs;
-}
-
-void Lights::setOffMillisec(int offMs)
-{
-    if (m_offMs != offMs) {
-        m_offMs = offMs;
-        Q_EMIT offMillisecChanged(m_offMs);
-        // FIXME: update the property if the light is already on
-    }
-}
-
-bool Lights::init()
-{
-    if (m_lightDevice) {
-        return true;
-    }
-
-    int err;
-    hw_module_t* module;
-
-    err = hw_get_module(LIGHTS_HARDWARE_MODULE_ID, (hw_module_t const**)&module);
-    if (err == 0) {
-        hw_device_t* device;
-        err = module->methods->open(module, LIGHT_ID_NOTIFICATIONS, &device);
-        if (err == 0) {
-            m_lightDevice = (light_device_t*)device;
-            turnOff();
-            return true;
-        } else {
-            qWarning() << "Failed to access notification lights";
-        }
-    } else {
-        qWarning() << "Failed to initialize lights hardware.";
-    }
-    return false;
-}
-
-void Lights::turnOn()
-{
-    // pulse
-    light_state_t state;
-    memset(&state, 0, sizeof(light_state_t));
-    state.color = m_color.rgba();
-    state.flashMode = LIGHT_FLASH_TIMED;
-    state.flashOnMS = m_onMs;
-    state.flashOffMS = m_offMs;
-    state.brightnessMode = BRIGHTNESS_MODE_USER;
-
-    if (m_lightDevice->set_light(m_lightDevice, &state) != 0) {
-         qWarning() << "Failed to turn the light off";
-    }
-}
-
-void Lights::turnOff()
-{
-    light_state_t state;
-    memset(&state, 0, sizeof(light_state_t));
-    state.color = 0x00000000;
-    state.flashMode = LIGHT_FLASH_NONE;
-    state.flashOnMS = 0;
-    state.flashOffMS = 0;
-    state.brightnessMode = 0;
-
-    if (m_lightDevice->set_light(m_lightDevice, &state) != 0) {
-        qWarning() << "Failed to turn the light off";
-    }
-}
diff --git a/plugins/Lights/Lights.h b/plugins/Lights/Lights.h
deleted file mode 100644
index d71fb1561..000000000
--- a/plugins/Lights/Lights.h
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Copyright (C) 2014 Canonical, Ltd.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; version 3.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- *
- * Author: Renato Araujo Oliveira Filho <renato.filho@canonical.com>
- */
-
-#ifndef LOMIRI_LIGHTS_H
-#define LOMIRI_LIGHTS_H
-
-#include <QtCore/QObject>
-#include <QtGui/QColor>
-
-struct light_device_t;
-
-class Lights: public QObject
-{
-    Q_OBJECT
-    Q_PROPERTY(State state READ state  WRITE setState NOTIFY stateChanged)
-    Q_PROPERTY(QColor color READ color WRITE setColor NOTIFY colorChanged)
-    Q_PROPERTY(int onMillisec READ onMillisec WRITE setOnMillisec NOTIFY onMillisecChanged)
-    Q_PROPERTY(int offMillisec READ offMillisec WRITE setOffMillisec NOTIFY offMillisecChanged)
-
-public:
-    enum State {
-        Off,
-        On,
-    };
-    Q_ENUM(State)
-
-    explicit Lights(QObject *parent = 0);
-    ~Lights();
-
-    void setState(State newState);
-    State state() const;
-
-    void setColor(const QColor &color);
-    QColor color() const;
-
-    int onMillisec() const;
-    void setOnMillisec(int onMs);
-
-    int offMillisec() const;
-    void setOffMillisec(int offMs);
-
-Q_SIGNALS:
-    void stateChanged(State newState);
-    void colorChanged(const QColor &color);
-    void onMillisecChanged(int onMs);
-    void offMillisecChanged(int offMs);
-
-private:
-    light_device_t* m_lightDevice;
-    QColor m_color;
-    State m_state;
-    int m_onMs;
-    int m_offMs;
-
-    bool init();
-    void turnOff();
-    void turnOn();
-};
-
-#endif
diff --git a/plugins/Lights/android-hardware.h b/plugins/Lights/android-hardware.h
deleted file mode 100644
index dda5e4300..000000000
--- a/plugins/Lights/android-hardware.h
+++ /dev/null
@@ -1,19 +0,0 @@
-/*
- * Copyright (C) 2014 Canonical, Ltd.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; version 3.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- *
- */
-
-#include <hardware/hardware.h>
-#include <hardware/lights.h>
diff --git a/plugins/Lights/plugin.cpp b/plugins/Lights/plugin.cpp
deleted file mode 100644
index 402ccc59b..000000000
--- a/plugins/Lights/plugin.cpp
+++ /dev/null
@@ -1,35 +0,0 @@
-/*
- * Copyright (C) 2014 Canonical, Ltd.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; version 3.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- *
- * Author: Renato Araujo Oliveira Filho <renato.filho@canonical.com>
- */
-
-#include "plugin.h"
-#include "Lights.h"
-
-#include <QtQml/qqml.h>
-
-static QObject *lights_provider(QQmlEngine *engine, QJSEngine *scriptEngine)
-{
-    Q_UNUSED(engine)
-    Q_UNUSED(scriptEngine)
-    return new Lights();
-}
-
-void LightsPlugin::registerTypes(const char *uri)
-{
-    Q_ASSERT(uri == QLatin1String("Lights"));
-    qmlRegisterSingletonType<Lights>(uri, 0, 1, "Lights", lights_provider);
-}
diff --git a/plugins/Lights/plugin.h b/plugins/Lights/plugin.h
deleted file mode 100644
index f607319ea..000000000
--- a/plugins/Lights/plugin.h
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright (C) 2014 Canonical, Ltd.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; version 3.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- *
- * Author: Renato Araujo Oliveira Filho <renato.filho@canonical.com>
- */
-
-#ifndef LIGHTS_PLUGIN_H
-#define LIGHTS_PLUGIN_H
-
-#include <QtQml/QQmlEngine>
-#include <QtQml/QQmlExtensionPlugin>
-
-class LightsPlugin : public QQmlExtensionPlugin
-{
-    Q_OBJECT
-    Q_PLUGIN_METADATA(IID "org.qt-project.Qt.QQmlExtensionInterface")
-
-public:
-    void registerTypes(const char *uri) override;
-};
-
-#endif
diff --git a/plugins/Lights/qmldir b/plugins/Lights/qmldir
deleted file mode 100644
index dbe6aa496..000000000
--- a/plugins/Lights/qmldir
+++ /dev/null
@@ -1,3 +0,0 @@
-module Lights
-plugin Lights-qml
-typeinfo Lights.qmltypes
diff --git a/qml/Panel/Indicators/IndicatorsLight.qml b/qml/Panel/Indicators/IndicatorsLight.qml
index 9a5e87da3..bd07f5e81 100644
--- a/qml/Panel/Indicators/IndicatorsLight.qml
+++ b/qml/Panel/Indicators/IndicatorsLight.qml
@@ -20,7 +20,7 @@
 
 import QtQuick 2.4
 import Powerd 0.1
-import Lights 0.1
+import Hfd 0.1
 import QMenuModel 1.0 as QMenuModel
 import Lomiri.Indicators 0.1 as Indicators
 import Wizard 0.1
@@ -171,9 +171,9 @@ console.log("no support for Multicolor LED. " + indicatorState)
         }
 
         // HACK: led is only updated after turn on so first always turn off
-        Lights.state = Lights.Off
+        Leds.state = Leds.Off
         if (indicatorState != "INDICATOR_OFF")
-          Lights.state = Lights.On
+          Leds.state = Leds.On
     }
 
     // Existence of unread notifications is determined by checking for a specific icon name in a dbus signal.
@@ -211,23 +211,23 @@ console.log("no support for Multicolor LED. " + indicatorState)
         }
     }
 
-    Component.onCompleted: Lights.state = Lights.Off
-    Component.onDestruction: Lights.state = Lights.Off
+    Component.onCompleted: Leds.state = Lights.Off
+    Component.onDestruction: Leds.state = Leds.Off
 
     property var _colorBinding: Binding {
-        target: Lights
+        target: Leds
         property: "color"
         value: root.color
     }
 
     property var _onMillisecBinding: Binding {
-        target: Lights
+        target: Leds
         property: "onMillisec"
         value: root.onMillisec
     }
 
     property var _offMillisecBinding: Binding {
-        target: Lights
+        target: Leds
         property: "offMillisec"
         value: root.offMillisec
     }
diff --git a/tests/mocks/CMakeLists.txt b/tests/mocks/CMakeLists.txt
index c193ad7cc..85ec31a75 100644
--- a/tests/mocks/CMakeLists.txt
+++ b/tests/mocks/CMakeLists.txt
@@ -35,7 +35,7 @@ add_subdirectory(indicator-service)
 add_subdirectory(liblightdm)
 add_subdirectory(libusermetrics)
 add_subdirectory(LightDMController)
-add_subdirectory(Lights)
+add_subdirectory(Hfd)
 add_subdirectory(MeeGo)
 add_subdirectory(Powerd)
 add_subdirectory(QMenuModel)
diff --git a/tests/mocks/Hfd/CMakeLists.txt b/tests/mocks/Hfd/CMakeLists.txt
new file mode 100644
index 000000000..248b234a7
--- /dev/null
+++ b/tests/mocks/Hfd/CMakeLists.txt
@@ -0,0 +1,8 @@
+add_library(MockHfd-qml MODULE
+    plugin.cpp
+    Leds.cpp
+    )
+
+qt5_use_modules(MockHfd-qml Qml Gui)
+
+add_lomiri_mock(Hfd 0.1 Hfd TARGETS MockHfd-qml)
diff --git a/tests/mocks/Lights/Lights.cpp b/tests/mocks/Hfd/Leds.cpp
similarity index 76%
rename from tests/mocks/Lights/Lights.cpp
rename to tests/mocks/Hfd/Leds.cpp
index 4ff06cd9a..a1934b826 100644
--- a/tests/mocks/Lights/Lights.cpp
+++ b/tests/mocks/Hfd/Leds.cpp
@@ -14,24 +14,24 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-#include "Lights.h"
+#include "Leds.h"
 
 #include <QDebug>
 
-Lights::Lights(QObject* parent)
+Leds::Leds(QObject* parent)
   : QObject(parent),
     m_color("blue"),
-    m_state(Lights::Off),
+    m_state(Leds::Off),
     m_onMs(1000),
     m_offMs(3000)
 {
 }
 
-Lights::~Lights()
+Leds::~Leds()
 {
 }
 
-void Lights::setState(Lights::State newState)
+void Leds::setState(Leds::State newState)
 {
     if (m_state != newState) {
         m_state = newState;
@@ -39,12 +39,12 @@ void Lights::setState(Lights::State newState)
     }
 }
 
-Lights::State Lights::state() const
+Leds::State Leds::state() const
 {
     return m_state;
 }
 
-void Lights::setColor(const QColor &color)
+void Leds::setColor(const QColor &color)
 {
     if (m_color != color) {
         m_color = color;
@@ -52,17 +52,17 @@ void Lights::setColor(const QColor &color)
     }
 }
 
-QColor Lights::color() const
+QColor Leds::color() const
 {
     return m_color;
 }
 
-int Lights::onMillisec() const
+int Leds::onMillisec() const
 {
     return m_onMs;
 }
 
-void Lights::setOnMillisec(int onMs)
+void Leds::setOnMillisec(int onMs)
 {
     if (m_onMs != onMs) {
         m_onMs = onMs;
@@ -70,12 +70,12 @@ void Lights::setOnMillisec(int onMs)
     }
 }
 
-int Lights::offMillisec() const
+int Leds::offMillisec() const
 {
     return m_offMs;
 }
 
-void Lights::setOffMillisec(int offMs)
+void Leds::setOffMillisec(int offMs)
 {
     if (m_offMs != offMs) {
         m_offMs = offMs;
diff --git a/tests/mocks/Lights/Lights.h b/tests/mocks/Hfd/Leds.h
similarity index 91%
rename from tests/mocks/Lights/Lights.h
rename to tests/mocks/Hfd/Leds.h
index d933e9ce2..f32ab9932 100644
--- a/tests/mocks/Lights/Lights.h
+++ b/tests/mocks/Hfd/Leds.h
@@ -14,13 +14,12 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-#ifndef LOMIRI_MOCK_LIGHTS_H
-#define LOMIRI_MOCK_LIGHTS_H
+#pragma once
 
 #include <QtCore/QObject>
 #include <QtGui/QColor>
 
-class Lights: public QObject
+class Leds: public QObject
 {
     Q_OBJECT
     Q_PROPERTY(State state READ state  WRITE setState NOTIFY stateChanged)
@@ -35,8 +34,8 @@ public:
     };
     Q_ENUM(State)
 
-    explicit Lights(QObject *parent = 0);
-    ~Lights();
+    explicit Leds(QObject *parent = 0);
+    ~Leds();
 
     void setState(State newState);
     State state() const;
@@ -62,5 +61,3 @@ private:
     int m_onMs;
     int m_offMs;
 };
-
-#endif
diff --git a/tests/mocks/Lights/plugin.cpp b/tests/mocks/Hfd/plugin.cpp
similarity index 76%
rename from tests/mocks/Lights/plugin.cpp
rename to tests/mocks/Hfd/plugin.cpp
index 6558f13d8..5b5829b32 100644
--- a/tests/mocks/Lights/plugin.cpp
+++ b/tests/mocks/Hfd/plugin.cpp
@@ -15,19 +15,19 @@
  */
 
 #include "plugin.h"
-#include "Lights.h"
+#include "Leds.h"
 
 #include <QtQml/qqml.h>
 
-static QObject *lights_provider(QQmlEngine *engine, QJSEngine *scriptEngine)
+static QObject *leds_provider(QQmlEngine *engine, QJSEngine *scriptEngine)
 {
     Q_UNUSED(engine)
     Q_UNUSED(scriptEngine)
-    return new Lights();
+    return new Leds();
 }
 
 void PowerdPlugin::registerTypes(const char *uri)
 {
-    Q_ASSERT(uri == QLatin1String("Lights"));
-    qmlRegisterSingletonType<Lights>(uri, 0, 1, "Lights", lights_provider);
+    Q_ASSERT(uri == QLatin1String("Hfd"));
+    qmlRegisterSingletonType<Leds>(uri, 0, 1, "Leds", leds_provider);
 }
diff --git a/tests/mocks/Lights/plugin.h b/tests/mocks/Hfd/plugin.h
similarity index 93%
rename from tests/mocks/Lights/plugin.h
rename to tests/mocks/Hfd/plugin.h
index 760c78d6c..88fa5cf35 100644
--- a/tests/mocks/Lights/plugin.h
+++ b/tests/mocks/Hfd/plugin.h
@@ -14,8 +14,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-#ifndef MOCK_POWER_PLUGIN_H
-#define MOCK_POWER_PLUGIN_H
+#pragma once
 
 #include <QtQml/QQmlEngine>
 #include <QtQml/QQmlExtensionPlugin>
@@ -28,5 +27,3 @@ class PowerdPlugin : public QQmlExtensionPlugin
 public:
     void registerTypes(const char *uri) override;
 };
-
-#endif
diff --git a/tests/mocks/Hfd/qmldir b/tests/mocks/Hfd/qmldir
new file mode 100644
index 000000000..663e60051
--- /dev/null
+++ b/tests/mocks/Hfd/qmldir
@@ -0,0 +1,3 @@
+module Hfd
+plugin MockHfd-qml
+typeinfo hfd.qmltypes
diff --git a/tests/mocks/Lights/CMakeLists.txt b/tests/mocks/Lights/CMakeLists.txt
deleted file mode 100644
index d4aac33f2..000000000
--- a/tests/mocks/Lights/CMakeLists.txt
+++ /dev/null
@@ -1,8 +0,0 @@
-add_library(MockLights-qml MODULE
-    plugin.cpp
-    Lights.cpp
-    )
-
-target_link_libraries(MockLights-qml Qt5::Qml Qt5::Gui)
-
-add_lomiri_mock(Lights 0.1 Lights TARGETS MockLights-qml)
diff --git a/tests/mocks/Lights/qmldir b/tests/mocks/Lights/qmldir
deleted file mode 100644
index 68da5e1b3..000000000
--- a/tests/mocks/Lights/qmldir
+++ /dev/null
@@ -1,3 +0,0 @@
-module Lights
-plugin MockLights-qml
-typeinfo Lights.qmltypes
diff --git a/tests/qmltests/Panel/Indicators/tst_IndicatorsLight.qml b/tests/qmltests/Panel/Indicators/tst_IndicatorsLight.qml
index 88f32ac6a..f0bd19e14 100644
--- a/tests/qmltests/Panel/Indicators/tst_IndicatorsLight.qml
+++ b/tests/qmltests/Panel/Indicators/tst_IndicatorsLight.qml
@@ -20,7 +20,7 @@ import Lomiri.SelfTest 0.1 as UT
 import Lomiri.Indicators 0.1 as Indicators
 import Lomiri.Components 1.3
 import Powerd 0.1
-import Lights 0.1
+import Hfd 0.1
 import QMenuModel 1.0
 import "../../../../qml/Panel/Indicators"
 
@@ -75,7 +75,7 @@ Item {
                 radius: width / 2
                 anchors.centerIn: parent
 
-                color: Lights.state === Lights.On ? Lights.color : "transparent"
+                color: Leds.state === Leds.On ? Leds.color : "transparent"
 
                 border.color: "black"
                 border.width: 1
@@ -162,79 +162,79 @@ Item {
                 //
                 // new messages
                 //
-                { tag: "Powerd.On with No Message", powerd: Powerd.On, actionData: noNewMessage, expectedLightsState: Lights.Off },
-                { tag: "Powerd.Off with No Message", powerd: Powerd.Off, actionData: noNewMessage, expectedLightsState: Lights.Off },
-                { tag: "Powerd.On with New Message", powerd: Powerd.On, actionData: newMessage, expectedLightsState: Lights.Off },
-                { tag: "Powerd.Off with New Message", powerd: Powerd.Off, actionData: newMessage, expectedLightsState: Lights.On },
+                { tag: "Powerd.On with No Message", powerd: Powerd.On, actionData: noNewMessage, expectedLightsState: Leds.Off },
+                { tag: "Powerd.Off with No Message", powerd: Powerd.Off, actionData: noNewMessage, expectedLightsState: Leds.Off },
+                { tag: "Powerd.On with New Message", powerd: Powerd.On, actionData: newMessage, expectedLightsState: Leds.Off },
+                { tag: "Powerd.Off with New Message", powerd: Powerd.Off, actionData: newMessage, expectedLightsState: Leds.On },
 
                 //
                 // show charging
                 //
                 { tag: "Powerd.Off while charging",
-                  expectedLightsState: Lights.On,
+                  expectedLightsState: Leds.On,
                       powerd: Powerd.Off, actionData: deviceStateDBusSignals.charging },
 
                 { tag: "Powerd.On while charging",
-                  expectedLightsState: Lights.Off,
+                  expectedLightsState: Leds.Off,
                       powerd: Powerd.On, actionData: deviceStateDBusSignals.charging },
 
                 { tag: "Powerd.On while charging",
-                  expectedLightsState: Lights.Off,
+                  expectedLightsState: Leds.Off,
                       powerd: Powerd.On, wizardStatus: batteryIconNames.charging },
 
                 //
                 // show charging and full
                 //
                 { tag: "Powerd.Off while charging and battery full",
-                  expectedLightsState: Lights.On, expectedLightsColor: green,
+                  expectedLightsState: Leds.On, expectedLightsColor: green,
                       powerd: Powerd.Off, actionData: deviceStateDBusSignals.fullyCharged },
 
                 { tag: "Powerd.On while charging and battery full",
-                  expectedLightsState: Lights.Off,
+                  expectedLightsState: Leds.Off,
                       powerd: Powerd.On, actionData: deviceStateDBusSignals.fullyCharged },
 
                 { tag: "Powerd.Off while discharging and battery full",
-                  expectedLightsState: Lights.Off,
+                  expectedLightsState: Leds.Off,
                       powerd: Powerd.Off, actionData: deviceStateDBusSignals.discharging, wizardStatus: batteryIconNames.fullyCharged },
 
                 //
                 // show empty
                 //
                 { tag: "Powerd.Off while discharging and battery empty",
-                  expectedLightsState: Lights.On, expectedLightsColor: orangeRed,
+                  expectedLightsState: Leds.On, expectedLightsColor: orangeRed,
                       powerd: Powerd.Off, wizardStatus: batteryIconNames.caution },
 
                 { tag: "Powerd.On while discharging and battery empty",
-                  expectedLightsState: Lights.Off,
+                  expectedLightsState: Leds.Off,
                       powerd: Powerd.On, wizardStatus: batteryIconNames.caution },
 
                 { tag: "Powerd.On while discharging and battery empty",
-                  expectedLightsState: Lights.Off,
+                  expectedLightsState: Leds.Off,
                       powerd: Powerd.On, wizardStatus: batteryIconNames.empty },
 
                 { tag: "Powerd.Off while charging and battery empty",
-                  expectedLightsState: Lights.On, expectedLightsColor: white,
+                  expectedLightsState: Leds.On, expectedLightsColor: white,
                       powerd: Powerd.Off, actionData: deviceStateDBusSignals.charging },
 
                 //
                 // new message has highest priority
                 //
                 { tag: "Powerd.Off with New Message, discharging and battery empty",
-                  expectedLightsState: Lights.On,
+                  expectedLightsState: Leds.On,
                   expectedLightsColor: darkGreen,
                   expectedLightsOnMillisec: 1000,
                   expectedLightsOffMillisec: 3000,
                       powerd: Powerd.Off, actionData: newMessage, wizardStatus: batteryIconNames.caution },
 
                 { tag: "Powerd.Off with New Message and charging",
-                  expectedLightsState: Lights.On,
+                  expectedLightsState: Leds.On,
                   expectedLightsColor: darkGreen,
                   expectedLightsOnMillisec: 1000,
                   expectedLightsOffMillisec: 3000,
                       powerd: Powerd.Off, actionData: combinedDBusSignals.hasMessageAndCharging },
 
                 { tag: "Powerd.Off with New Message, charging and battery full",
-                  expectedLightsState: Lights.On,
+                  expectedLightsState: Leds.On,
                   expectedLightsColor: darkGreen,
                   expectedLightsOnMillisec: 1000,
                   expectedLightsOffMillisec: 3000,
@@ -244,11 +244,11 @@ Item {
                 // use battery level
                 //
                 { tag: "Powerd.Off while charging and battery level at 80%",
-                  expectedLightsState: Lights.On, expectedLightsColor: white,
+                  expectedLightsState: Leds.On, expectedLightsColor: white,
                       powerd: Powerd.Off, actionData: batteryLevelDBusSignals["80"], wizardStatus: batteryIconNames.charging },
 
                 { tag: "Powerd.Off while charging and battery level at 100%",
-                  expectedLightsState: Lights.On, expectedLightsColor: green,
+                  expectedLightsState: Leds.On, expectedLightsColor: green,
                   expectedLightsOnMillisec: 1000,
                   expectedLightsOffMillisec: 0,
                       powerd: Powerd.Off, actionData: batteryLevelDBusSignals["100"], wizardStatus: batteryIconNames.charging },
@@ -280,13 +280,13 @@ Item {
             if (data.hasOwnProperty("wizardStatus"))
                 loader.item.batteryIconName = data.wizardStatus
 
-            compare(Lights.state, data.expectedLightsState, "Lights state does not match expected value");
+            compare(Leds.state, data.expectedLightsState, "Lights state does not match expected value");
             if (data.hasOwnProperty("expectedLightsColor"))
-                compare(Lights.color, data.expectedLightsColor, "Lights color does not match expected value")
+                compare(Leds.color, data.expectedLightsColor, "Lights color does not match expected value")
             if (data.hasOwnProperty("expectedLightsOnMillisec"))
-                compare(Lights.onMillisec, data.expectedLightsOnMillisec, "Lights OnMillisec does not match expected value")
+                compare(Leds.onMillisec, data.expectedLightsOnMillisec, "Lights OnMillisec does not match expected value")
             if (data.hasOwnProperty("expectedLightsOffMillisec"))
-                compare(Lights.offMillisec, data.expectedLightsOffMillisec, "Lights OffMillisec does not match expected value")
+                compare(Leds.offMillisec, data.expectedLightsOffMillisec, "Lights OffMillisec does not match expected value")
         }
     }
 }
-- 
2.34.1

